//classe para aviones enemigos

class Enemy{
  float speed,yPos,xPos,finalPos;
  int anime,life,temp;
  
  Enemy (){
    xPos = random(100,width-100);
    yPos = -50;
    speed = random(2,5);
    anime = 0;
    finalPos = random(height/2);//se crea una coord  para posicionar enemigo
    life = 1;
    temp = 0;
  }
  
  void move(){ //se desplaza hasta posición random
    yPos += speed;
    if (yPos > finalPos){
      speed = 0;
    }
  }
  
  void tempFire(){ //crea un temporizador individual para cada enemigo
    if(temp < 100){
      temp += 1;
    }else{
      temp = 0;
    }
    
  }
  
  void display(){
    if (life > 0){
      image(enemyAnimation[anime],xPos,yPos,100,100);
      anime += 1;
      if (anime >3 || life == 0){
        anime = 0;
      }
    }else{
        image(enemyDead[anime],xPos,yPos,100,100);
        anime += 1; 
         if (anime >11){
          anime = 0;
        }
    }
    
  }
  
  boolean dead(){
    if (life == 0 && anime == 11){
      return true;
    }else {
      return false;
    }
  }
}
//clase para bala enemiga
class BulletE{
  float speed,yPos,xPos,life;
  
  BulletE (float x, float y){
    xPos = x+50;
    yPos = y+100;
    speed = 4;
    life = 1;
  }
  
  void move(){ //dibuja y actualiza posición
    yPos += speed;
    stroke(255, 0, 0);
    strokeWeight(4);
    fill(255, 255, 0);
    ellipse (xPos, yPos,10,10);
    if (yPos > height){
      life = 0;
    }        
  }
  
  void impact(){ //calcula colisión
    float impactBullet = dist(coordX+50,coordY+55,xPos+5,yPos+5);
    if(impactBullet < 50 && deadState == false){
      life = 0;
      exploPlayer.play();
      playing.stop();
      lifePlayer -= 1;
      deadState = true;
    }
  }
  
  boolean dead(){ //verifica si hay que eliminar el objeto
    if (life == 0){
      return true;
    }else {
      return false;
    }
  }  
}
  
  //funcion para dibujar enemigos
void printEnemies(){
  newEnemy = random(0,1000);
  if(enemies.size() < 6 && newEnemy > 970){ //condición para crear nuevo enemigo random
    enemies.add(new Enemy()); //se añade nuevo objeto a la arraylist
    newEnem.play();
    }
  for (int i = enemies.size()-1; i >= 0; i--) { 
    Enemy enemy = enemies.get(i); //se coge un objeto de la arraylist
    enemy.move();
    enemy.display();
    enemy.tempFire();
    if (enemy.temp == 100 && deadState == false){
      bulletsE.add(new BulletE(enemy.xPos,enemy.yPos));
      shootEnem.play();
    }
    if (enemy.dead()) {
      // Se elimina objeto para limitar la arraylist
      enemies.remove(i);
    }    
  }   
}
//función para dibujar los disparos enemigos
void shootEnemies(){
  for (int i = bulletsE.size()-1; i >= 0; i--) { 
    BulletE bulletE = bulletsE.get(i); //se coge un objeto de la arraylist
    bulletE.move();
    bulletE.impact();
    if (bulletE.dead()) {
      // Se elimina objeto para limitar la arraylist
      bulletsE.remove(i);
    }    
  }    
}
